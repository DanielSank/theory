Vectors are common, anything that adds, electric potential, electric field, quantum states, signals in linear circuits,
amplitude of light waves propogating through materials...

What's the deal with 2D displacement? Take two displacements. If you go once and then again, you add the displacements,
hence they're vector. Way easier to write everything if you choose a coordinate system and just carry around the amounts
of x and y. Then the component addition is just short hand for a|x>+(b|x>+c|y>) = (a+b)|x> + c|y>. Could use a different
basis, then the number tuples CHANGE! This is essential, the coordinates are not the object.

What if you have an operation that twists the vectors around? It could look like this:
If you put it in the other basis it looks simpler. This is the essense of many, many physics problems.

Lots of objects we want to understand and calculate with in physics are vectors. Any group of objects that you can
sensibly add together and multiply by a scale factor is a vector space. This is almost everything you ever want to
calculate in physics: physical displacement, electric or gravitational potential, quantum states, electrical signals,
amplitudes of light travelling through materials.

Let's think about the simplest nontrivial case, displacement in two dimensional plane. If you displace once by u and
then by v, you add the arrows together, hence displacement is a vector. You can't use arrows for precice or abstrace
calculations, so instead we pick a coordinate system and keep track of x and y components. This is great because then
you can write a pair of numbers instead of drawing an arrow and two add displacements you just add numbers component-
wise. Once you do this you have to realize that your numbers refer to the x and y axes you chose. This is the essential
point. If I create another set of axes, p and q, the number pair we created for the x/y axes isn't right anymore. If
we pick p and q as shown in the figure, then u and v are:
So clearly the notation x=(d,d) isn't good enough. You have to write something like: u~(asdf)
or at least tell the person you're talking to, frequently yourself, which coordinate system you're in before you
specify tuples.
